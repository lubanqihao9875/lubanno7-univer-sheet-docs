import{_ as i,c as a,o as t,ag as l}from"./chunks/framework.BwiaPQAz.js";const g=JSON.parse('{"title":"方法","description":"","frontmatter":{},"headers":[],"relativePath":"api/methods.md","filePath":"api/methods.md"}'),e={name:"api/methods.md"};function n(h,s,o,r,p,d){return t(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h1><p>本章节将介绍 Lubanno7UniverSheet 组件的方法 API。</p><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><p>以下方法可以直接通过表格实例调用：</p><h3 id="on-eventname-handler" tabindex="-1">on(eventName, handler) <a class="header-anchor" href="#on-eventname-handler" aria-label="Permalink to &quot;on(eventName, handler)&quot;">​</a></h3><ul><li><strong>描述</strong>: 注册事件监听器</li><li><strong>参数</strong>: <ul><li><code>eventName</code> (String): 事件名称</li><li><code>handler</code> (Function): 事件处理函数</li></ul></li><li><strong>返回值</strong>: 表格实例，支持链式调用</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cellClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;点击的单元格:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="off-eventname-handler" tabindex="-1">off(eventName, handler) <a class="header-anchor" href="#off-eventname-handler" aria-label="Permalink to &quot;off(eventName, handler)&quot;">​</a></h3><ul><li><strong>描述</strong>: 移除事件监听器</li><li><strong>参数</strong>: <ul><li><code>eventName</code> (String): 事件名称</li><li><code>handler</code> (Function, 可选): 事件处理函数，如果不提供则移除该事件的所有监听器</li></ul></li><li><strong>返回值</strong>: 表格实例，支持链式调用</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 移除特定的事件处理函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cellClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handleCellClick)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 移除某个事件的所有监听器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cellClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="getexposed" tabindex="-1">getExposed() <a class="header-anchor" href="#getexposed" aria-label="Permalink to &quot;getExposed()&quot;">​</a></h3><ul><li><strong>描述</strong>: 获取表格暴露的属性和方法</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 包含 <code>attributes</code> 和 <code>methods</code> 的对象</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exposed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getExposed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exposed.methods</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> univerInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exposed.attributes.univerInstance</span></span></code></pre></div><h3 id="dispose" tabindex="-1">dispose() <a class="header-anchor" href="#dispose" aria-label="Permalink to &quot;dispose()&quot;">​</a></h3><ul><li><strong>描述</strong>: 销毁表格实例，释放资源</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="暴露的方法" tabindex="-1">暴露的方法 <a class="header-anchor" href="#暴露的方法" aria-label="Permalink to &quot;暴露的方法&quot;">​</a></h2><p>以下方法通过 <code>getExposed().methods</code> 获取：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getExposed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().methods</span></span></code></pre></div><h3 id="数据获取方法" tabindex="-1">数据获取方法 <a class="header-anchor" href="#数据获取方法" aria-label="Permalink to &quot;数据获取方法&quot;">​</a></h3><h4 id="gettabledata" tabindex="-1">getTableData() <a class="header-anchor" href="#gettabledata" aria-label="Permalink to &quot;getTableData()&quot;">​</a></h4><ul><li><strong>描述</strong>: 获取表格所有数据</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 数据对象数组</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tableData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTableData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="getrowbyindex-index" tabindex="-1">getRowByIndex(index) <a class="header-anchor" href="#getrowbyindex-index" aria-label="Permalink to &quot;getRowByIndex(index)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据索引获取某一行数据</li><li><strong>参数</strong>: <ul><li><code>index</code> (Number): 行索引，从 0 开始</li></ul></li><li><strong>返回值</strong>: 行数据对象，如果索引无效则返回 null</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rowData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRowByIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="getrowbyfilter-filter" tabindex="-1">getRowByFilter(filter) <a class="header-anchor" href="#getrowbyfilter-filter" aria-label="Permalink to &quot;getRowByFilter(filter)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据筛选条件获取符合条件的第一行数据</li><li><strong>参数</strong>: <ul><li><code>filter</code> (Object): 筛选条件对象，属性名为列字段名，属性值为筛选值</li></ul></li><li><strong>返回值</strong>: 符合条件的行数据对象，如果没有符合条件的行则返回 null</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRowByFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ status: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;已完成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="getrowbyfilterall-filter" tabindex="-1">getRowByFilterAll(filter) <a class="header-anchor" href="#getrowbyfilterall-filter" aria-label="Permalink to &quot;getRowByFilterAll(filter)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据筛选条件获取所有符合条件的行数据</li><li><strong>参数</strong>: <ul><li><code>filter</code> (Object): 筛选条件对象，属性名为列字段名，属性值为筛选值</li></ul></li><li><strong>返回值</strong>: 符合条件的行数据对象数组</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRowByFilterAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ isVip: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="getrowindexbyfilter-filter" tabindex="-1">getRowIndexByFilter(filter) <a class="header-anchor" href="#getrowindexbyfilter-filter" aria-label="Permalink to &quot;getRowIndexByFilter(filter)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据筛选条件获取符合条件的第一行索引</li><li><strong>参数</strong>: <ul><li><code>filter</code> (Object): 筛选条件对象</li></ul></li><li><strong>返回值</strong>: 行索引，如果没有符合条件的行则返回 -1</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rowIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRowIndexByFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="getrowindexbyfilterall-filter" tabindex="-1">getRowIndexByFilterAll(filter) <a class="header-anchor" href="#getrowindexbyfilterall-filter" aria-label="Permalink to &quot;getRowIndexByFilterAll(filter)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据筛选条件获取所有符合条件的行索引</li><li><strong>参数</strong>: <ul><li><code>filter</code> (Object): 筛选条件对象</li></ul></li><li><strong>返回值</strong>: 行索引数组</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rowIndices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRowIndexByFilterAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ isVip: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="gettableheaderrowcount" tabindex="-1">getTableHeaderRowCount() <a class="header-anchor" href="#gettableheaderrowcount" aria-label="Permalink to &quot;getTableHeaderRowCount()&quot;">​</a></h4><ul><li><strong>描述</strong>: 获取表格的表头行数</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 表头行数</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> headerRowCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTableHeaderRowCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="gettabledatarowcount" tabindex="-1">getTableDataRowCount() <a class="header-anchor" href="#gettabledatarowcount" aria-label="Permalink to &quot;getTableDataRowCount()&quot;">​</a></h4><ul><li><strong>描述</strong>: 获取表格的数据行数</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 数据行数</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataRowCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTableDataRowCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="gettablerowcount" tabindex="-1">getTableRowCount() <a class="header-anchor" href="#gettablerowcount" aria-label="Permalink to &quot;getTableRowCount()&quot;">​</a></h4><ul><li><strong>描述</strong>: 获取表格的总行数（表头行数 + 数据行数）</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 总行数</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> totalRowCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTableRowCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="gettablecolumncount" tabindex="-1">getTableColumnCount() <a class="header-anchor" href="#gettablecolumncount" aria-label="Permalink to &quot;getTableColumnCount()&quot;">​</a></h4><ul><li><strong>描述</strong>: 获取表格的总列数</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 总列数</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> totalColumnCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTableColumnCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="getcolumnname-colidx" tabindex="-1">getColumnName(colIdx) <a class="header-anchor" href="#getcolumnname-colidx" aria-label="Permalink to &quot;getColumnName(colIdx)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据列索引获取列字段名</li><li><strong>参数</strong>: <ul><li><code>colIdx</code> (Number): 列索引，从 0 开始</li></ul></li><li><strong>返回值</strong>: 列字段名</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> columnName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getColumnName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="getcolumnindex-columnname" tabindex="-1">getColumnIndex(columnName) <a class="header-anchor" href="#getcolumnindex-columnname" aria-label="Permalink to &quot;getColumnIndex(columnName)&quot;">​</a></h4><ul><li><strong>描述</strong>: 根据列字段名获取列索引</li><li><strong>参数</strong>: <ul><li><code>columnName</code> (String): 列字段名</li></ul></li><li><strong>返回值</strong>: 列索引，如果未找到则返回 -1</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> columnIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getColumnIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="数据操作方法" tabindex="-1">数据操作方法 <a class="header-anchor" href="#数据操作方法" aria-label="Permalink to &quot;数据操作方法&quot;">​</a></h3><h4 id="insertrowbefore-index-rowdata" tabindex="-1">insertRowBefore(index, rowData) <a class="header-anchor" href="#insertrowbefore-index-rowdata" aria-label="Permalink to &quot;insertRowBefore(index, rowData)&quot;">​</a></h4><ul><li><strong>描述</strong>: 在指定索引前插入行</li><li><strong>参数</strong>: <ul><li><code>index</code> (Number): 行索引，从 0 开始</li><li><code>rowData</code> (Object): 行数据对象</li></ul></li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertRowBefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;赵六&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="insertrowafter-index-rowdata" tabindex="-1">insertRowAfter(index, rowData) <a class="header-anchor" href="#insertrowafter-index-rowdata" aria-label="Permalink to &quot;insertRowAfter(index, rowData)&quot;">​</a></h4><ul><li><strong>描述</strong>: 在指定索引后插入行</li><li><strong>参数</strong>: <ul><li><code>index</code> (Number): 行索引，从 0 开始</li><li><code>rowData</code> (Object): 行数据对象</li></ul></li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertRowAfter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;钱七&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="insertrowtoend-rowdata" tabindex="-1">insertRowToEnd(rowData) <a class="header-anchor" href="#insertrowtoend-rowdata" aria-label="Permalink to &quot;insertRowToEnd(rowData)&quot;">​</a></h4><ul><li><strong>描述</strong>: 在表格末尾插入行</li><li><strong>参数</strong>: <ul><li><code>rowData</code> (Object): 行数据对象</li></ul></li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertRowToEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;孙八&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><h4 id="updaterow-index-rowdata-mergewithexisting" tabindex="-1">updateRow(index, rowData, mergeWithExisting) <a class="header-anchor" href="#updaterow-index-rowdata-mergewithexisting" aria-label="Permalink to &quot;updateRow(index, rowData, mergeWithExisting)&quot;">​</a></h4><ul><li><strong>描述</strong>: 更新指定索引的行数据</li><li><strong>参数</strong>: <ul><li><code>index</code> (Number): 行索引，从 0 开始</li><li><code>rowData</code> (Object): 行数据对象</li><li><code>mergeWithExisting</code> (Boolean, 可选): 是否与现有数据合并，默认为 true</li></ul></li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 合并现有数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换现有数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="deleterow-index" tabindex="-1">deleteRow(index) <a class="header-anchor" href="#deleterow-index" aria-label="Permalink to &quot;deleteRow(index)&quot;">​</a></h4><ul><li><strong>描述</strong>: 删除指定索引的行</li><li><strong>参数</strong>: <ul><li><code>index</code> (Number): 行索引，从 0 开始</li></ul></li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="样式和状态方法" tabindex="-1">样式和状态方法 <a class="header-anchor" href="#样式和状态方法" aria-label="Permalink to &quot;样式和状态方法&quot;">​</a></h3><h4 id="setcellfontcolor-rowdataidx-columnname-color" tabindex="-1">setCellFontColor(rowDataIdx, columnName, color) <a class="header-anchor" href="#setcellfontcolor-rowdataidx-columnname-color" aria-label="Permalink to &quot;setCellFontColor(rowDataIdx, columnName, color)&quot;">​</a></h4><ul><li><strong>描述</strong>: 设置指定单元格的字体颜色</li><li><strong>参数</strong>: <ul><li><code>rowDataIdx</code> (Number): 行索引，从 0 开始</li><li><code>columnName</code> (String): 列字段名</li><li><code>color</code> (String): 颜色值，如 &#39;#ff0000&#39;</li></ul></li><li><strong>返回值</strong>: 布尔值，表示操作是否成功</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCellFontColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#ff0000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="endediting" tabindex="-1">endEditing() <a class="header-anchor" href="#endediting" aria-label="Permalink to &quot;endEditing()&quot;">​</a></h4><ul><li><strong>描述</strong>: 结束当前编辑状态(异步)</li><li><strong>参数</strong>: 无</li><li><strong>返回值</strong>: 无</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endEditing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="导出方法" tabindex="-1">导出方法 <a class="header-anchor" href="#导出方法" aria-label="Permalink to &quot;导出方法&quot;">​</a></h3><h4 id="exporttojson-filename" tabindex="-1">exportToJson(filename) <a class="header-anchor" href="#exporttojson-filename" aria-label="Permalink to &quot;exportToJson(filename)&quot;">​</a></h4><ul><li><strong>描述</strong>: 导出表格数据为 JSON 格式</li><li><strong>参数</strong>: <ul><li><code>filename</code> (String): 导出的文件名</li></ul></li><li><strong>返回值</strong>: 布尔值，表示操作是否成功</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exportToJson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;table-data.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="exporttocsv-filename" tabindex="-1">exportToCsv(filename) <a class="header-anchor" href="#exporttocsv-filename" aria-label="Permalink to &quot;exportToCsv(filename)&quot;">​</a></h4><ul><li><strong>描述</strong>: 导出表格数据为 CSV 格式</li><li><strong>参数</strong>: <ul><li><code>filename</code> (String): 导出的文件名</li></ul></li><li><strong>返回值</strong>: 布尔值，表示操作是否成功</li><li><strong>示例</strong>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exportToCsv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;table-data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,86)])])}const c=i(e,[["render",n]]);export{g as __pageData,c as default};
